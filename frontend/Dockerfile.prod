# Build stage
FROM node:18-alpine as build

# Set working directory
WORKDIR /app

# Install dependencies
COPY package*.json ./
RUN npm ci

# Add build-time environment variables
ARG REACT_APP_API_URL
ENV REACT_APP_API_URL=$REACT_APP_API_URL

# Copy source code
COPY . .

# Build application
RUN npm run build && \
    echo "Build complete. Contents of /app/build:" && \
    ls -la build && \
    echo "Contents of /app/build/static:" && \
    ls -la build/static || echo "No static directory found" && \
    echo "Contents of index.html:" && \
    cat build/index.html || echo "No index.html found"

# Production stage
FROM nginx:alpine

# Copy nginx configuration first
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Create nginx directories with proper permissions
RUN mkdir -p /usr/share/nginx/html && \
    mkdir -p /var/cache/nginx && \
    mkdir -p /var/log/nginx && \
    mkdir -p /tmp/nginx && \
    chown -R nginx:nginx /usr/share/nginx && \
    chown -R nginx:nginx /var/cache/nginx && \
    chown -R nginx:nginx /var/log/nginx && \
    chown -R nginx:nginx /tmp/nginx && \
    chmod -R 755 /usr/share/nginx && \
    chmod -R 755 /var/cache/nginx && \
    chmod -R 755 /var/log/nginx && \
    chmod -R 755 /tmp/nginx && \
    echo "Initial nginx directory permissions:" && \
    ls -la /usr/share/nginx && \
    ls -la /var/cache/nginx && \
    ls -la /var/log/nginx && \
    ls -la /tmp/nginx

# Copy built assets from build stage
COPY --from=build --chown=nginx:nginx /app/build/ /usr/share/nginx/html/

# Verify the copy and permissions
RUN echo "Verifying /usr/share/nginx/html contents:" && \
    ls -la /usr/share/nginx/html && \
    echo "Checking index.html:" && \
    cat /usr/share/nginx/html/index.html || echo "No index.html found" && \
    echo "Setting final permissions..." && \
    find /usr/share/nginx/html -type d -exec chmod 755 {} \; && \
    find /usr/share/nginx/html -type f -exec chmod 644 {} \; && \
    echo "Final permissions:" && \
    ls -la /usr/share/nginx/html && \
    echo "Nginx user info:" && \
    id nginx

# Switch to nginx user
USER nginx

# Start nginx with debug mode
CMD ["nginx", "-g", "daemon off; error_log /dev/stdout debug;"]
