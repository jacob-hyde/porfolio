name: Deploy to Linode

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Deploy to Linode
        uses: appleboy/ssh-action@master
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
        with:
          host: ${{ secrets.LINODE_HOST }}
          username: ${{ secrets.LINODE_USERNAME }}
          key: ${{ secrets.LINODE_SSH_KEY }}
          envs: MYSQL_ROOT_PASSWORD,MYSQL_PASSWORD,SECRET_KEY,JWT_SECRET_KEY
          script: |
            cd /var/www/jacobhyde.com
            
            echo "Creating .env.prod file..."
            cat > .env.prod << EOL
            # Database Configuration
            MYSQL_ROOT_PASSWORD=$MYSQL_ROOT_PASSWORD
            MYSQL_DATABASE=jacobhyde_db
            MYSQL_USER=jacobhyde_user
            MYSQL_PASSWORD=$MYSQL_PASSWORD

            # Backend Configuration
            FLASK_ENV=production
            SECRET_KEY=$SECRET_KEY
            JWT_SECRET_KEY=$JWT_SECRET_KEY

            # Frontend Configuration
            NODE_ENV=production
            REACT_APP_API_URL=https://jacobhyde.com/api
            EOL
            
            # Set proper permissions
            chmod 600 .env.prod
            
            echo "Verifying environment variables (without showing secrets)..."
            grep -v "PASSWORD\|KEY" .env.prod
            
            echo "Cleaning up containers and images..."
            docker compose -f docker-compose.prod.yml down -v
            docker system prune -f --volumes
            
            echo "Building containers..."
            docker compose -f docker-compose.prod.yml build --no-cache
            
            echo "Starting containers..."
            docker compose -f docker-compose.prod.yml up -d
            
            # Wait for containers to initialize
            echo "Waiting for containers to initialize..."
            sleep 15
            
            echo "Checking container status..."
            docker compose -f docker-compose.prod.yml ps
            
            echo "Checking MySQL logs..."
            docker compose -f docker-compose.prod.yml logs db
            
            echo "Checking Nginx logs..."
            docker compose -f docker-compose.prod.yml logs nginx
