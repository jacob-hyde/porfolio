name: Deploy to Linode

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Build React app
        working-directory: frontend
        env:
          CI: false  # Prevents treating warnings as errors
        run: |
          npm ci
          npm run build

      - name: Copy build files to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.LINODE_HOST }}
          username: ${{ secrets.LINODE_USERNAME }}
          key: ${{ secrets.LINODE_SSH_KEY }}
          source: "frontend/build/*"
          target: "/var/www/jacobhyde.com/frontend/build"
          strip_components: 2

      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
        with:
          host: ${{ secrets.LINODE_HOST }}
          username: ${{ secrets.LINODE_USERNAME }}
          key: ${{ secrets.LINODE_SSH_KEY }}
          envs: MYSQL_ROOT_PASSWORD,MYSQL_PASSWORD,SECRET_KEY,JWT_SECRET_KEY
          script: |
            cd /var/www/jacobhyde.com
            
            echo "Creating .env.prod file..."
            cat > .env.prod << EOL
            # Database Configuration
            MYSQL_ROOT_PASSWORD=$MYSQL_ROOT_PASSWORD
            MYSQL_DATABASE=jacobhyde_db
            MYSQL_USER=jacobhyde_user
            MYSQL_PASSWORD=$MYSQL_PASSWORD

            # Backend Configuration
            FLASK_ENV=production
            SECRET_KEY=$SECRET_KEY
            JWT_SECRET_KEY=$JWT_SECRET_KEY

            # Frontend Configuration
            NODE_ENV=production
            REACT_APP_API_URL=https://jacobhyde.com/api
            EOL
            
            chmod 600 .env.prod
            
            echo "Building and starting containers..."
            docker compose -f docker-compose.prod.yml down
            docker compose -f docker-compose.prod.yml build --no-cache
            docker compose -f docker-compose.prod.yml up -d
            
            echo "Checking container status..."
            docker compose -f docker-compose.prod.yml ps
