version: '3.8'

services:
  db:
    image: mysql:8.0
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-portfolio_db}
      MYSQL_USER: ${MYSQL_USER:-portfolio_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-portfolio_pass}
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD:-root}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - portfolio_net

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        - PYTHON_VERSION=3.11
    restart: unless-stopped
    ports:
      - "8092:5000"
    environment:
      - MYSQL_HOST=db
      - MYSQL_USER=${MYSQL_USER:-portfolio_user}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD:-portfolio_pass}
      - MYSQL_DATABASE=${MYSQL_DATABASE:-portfolio_db}
      - FLASK_APP=main.py
      - FLASK_ENV=${FLASK_ENV:-development}
      - FLASK_DEBUG=${FLASK_DEBUG:-1}
      - SECRET_KEY=${SECRET_KEY:-your-super-secret-key-here}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-your-jwt-secret-key-here}
      - PYTHONUNBUFFERED=1
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/venv  # Exclude venv directory
    networks:
      - portfolio_net
    command: flask run --host=0.0.0.0 --port=5000 --reload

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - NODE_VERSION=18
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - REACT_APP_API_URL=${REACT_APP_API_URL:-http://localhost:8092}
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - portfolio_net
    depends_on:
      - backend

networks:
  portfolio_net:
    driver: bridge

volumes:
  db_data:
    driver: local
